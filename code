#include <fstream>
#include <vector>

using namespace std;

bool is_kp(unsigned long long x, int k){
    if(x == 0){
        return false;
    }
    if(x == 1 and k == 1){
        return true;
    }
    if(k == 1){
        return false;
    }

    while(x % k == 0){
        x /= k;
    }

    if(x == 1){
        return true;
    }
    return false;
}

unsigned int c, k, n;
unsigned long long vec[1000001];

int main()
{
    ifstream cin("kpower.in");
    ofstream cout("kpower.out");

    cin >> c >> k >> n;

    for(int i = 0; i < n; i ++){
        cin >> vec[i];
    }

    if(c == 1){
        unsigned long long maxi = 0;
        for(int i = 0; i < n; i ++){
            if(is_kp(vec[i], k) == true){
                if(maxi < vec[i]){
                    maxi = vec[i];
                }
            }
        }

        cout << maxi;
        return 0;
    }
    else{
        int secv = 0, secvmax = 0;
        unsigned long long sum = 0, summax = 0;

        for(int i = 0; i < n; i ++){
            if(is_kp(vec[i], k) == true){
                secv ++;
                sum += vec[i];
            }
            else{
                secv = 0;
                sum = 0;
            }

            if(secv > secvmax){
                secvmax = secv;
                summax = sum;
            }
            else if(secv == secvmax){
                if(summax < sum){
                    summax = sum;
                }
            }

        }

        if(c == 2){
            cout << secvmax;
        }
        else{
            cout << summax;
        }

        return 0;
    }

    return 0;
}
